{"name": "test_login_exitoso", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"usuario\"]\"}\n  (Session info: chrome=135.0.7049.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF7A7095355+78597]\n\tGetHandleVerifier [0x00007FF7A70953B0+78688]\n\t(No symbol) [0x00007FF7A6E491AA]\n\t(No symbol) [0x00007FF7A6E9F149]\n\t(No symbol) [0x00007FF7A6E9F3FC]\n\t(No symbol) [0x00007FF7A6EF2467]\n\t(No symbol) [0x00007FF7A6EC712F]\n\t(No symbol) [0x00007FF7A6EEF2BB]\n\t(No symbol) [0x00007FF7A6EC6EC3]\n\t(No symbol) [0x00007FF7A6E903F8]\n\t(No symbol) [0x00007FF7A6E91163]\n\tGetHandleVerifier [0x00007FF7A733EF0D+2870973]\n\tGetHandleVerifier [0x00007FF7A73396B8+2848360]\n\tGetHandleVerifier [0x00007FF7A7356993+2967875]\n\tGetHandleVerifier [0x00007FF7A70B019A+188746]\n\tGetHandleVerifier [0x00007FF7A70B847F+222255]\n\tGetHandleVerifier [0x00007FF7A709D2D4+111236]\n\tGetHandleVerifier [0x00007FF7A709D482+111666]\n\tGetHandleVerifier [0x00007FF7A70835A9+5465]\n\tBaseThreadInitThunk [0x00007FFB003E7374+20]\n\tRtlUserThreadStart [0x00007FFB0125CC91+33]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"14fd712228adecb3e474dfce91853a60\")>\n\n    def test_login_exitoso(driver):\n        driver.get(\"http://localhost/logincopia/productos.php\")\n>       driver.find_element(By.ID, \"usuario\").send_keys(\"usprueba\")\n\ntest\\test_login.py:8: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:898: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001A3CAB5CE30>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...A70835A9+5465]\\\\n\\\\tBaseThreadInitThunk [0x00007FFB003E7374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFB0125CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"usuario\"]\"}\nE         (Session info: chrome=135.0.7049.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7A7095355+78597]\nE       \tGetHandleVerifier [0x00007FF7A70953B0+78688]\nE       \t(No symbol) [0x00007FF7A6E491AA]\nE       \t(No symbol) [0x00007FF7A6E9F149]\nE       \t(No symbol) [0x00007FF7A6E9F3FC]\nE       \t(No symbol) [0x00007FF7A6EF2467]\nE       \t(No symbol) [0x00007FF7A6EC712F]\nE       \t(No symbol) [0x00007FF7A6EEF2BB]\nE       \t(No symbol) [0x00007FF7A6EC6EC3]\nE       \t(No symbol) [0x00007FF7A6E903F8]\nE       \t(No symbol) [0x00007FF7A6E91163]\nE       \tGetHandleVerifier [0x00007FF7A733EF0D+2870973]\nE       \tGetHandleVerifier [0x00007FF7A73396B8+2848360]\nE       \tGetHandleVerifier [0x00007FF7A7356993+2967875]\nE       \tGetHandleVerifier [0x00007FF7A70B019A+188746]\nE       \tGetHandleVerifier [0x00007FF7A70B847F+222255]\nE       \tGetHandleVerifier [0x00007FF7A709D2D4+111236]\nE       \tGetHandleVerifier [0x00007FF7A709D482+111666]\nE       \tGetHandleVerifier [0x00007FF7A70835A9+5465]\nE       \tBaseThreadInitThunk [0x00007FFB003E7374+20]\nE       \tRtlUserThreadStart [0x00007FFB0125CC91+33]\n\n..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "start": 1745030603051, "stop": 1745030612645, "uuid": "252f0daa-2ad3-422c-811f-368b9bdb1ca3", "historyId": "c70c25f6dbcf85f0d2ca979bbed3c262", "testCaseId": "c70c25f6dbcf85f0d2ca979bbed3c262", "fullName": "test.test_login#test_login_exitoso", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "DESKTOP-F0KBOHF"}, {"name": "thread", "value": "11872-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_login"}]}